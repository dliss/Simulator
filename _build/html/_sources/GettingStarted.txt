Getting Started
===============

The Simulator package provides a set of python modules for simulating sources in
the gamma-ray sky. A basic simulation can be generated by running the
Controller module with the default options. More sophisticated simulations can 
be developed by adapting the modules and options to your specific project.

Within the software, a Source module stores parameters for each simulated source, while
a Model module stores the functions that generate each source's light curve. 
In both modules, a Standard class is provided for generic sources and 
subclasses are provided for more specific or sophisticated sources.

The SourceMap module stores multiple Sources when more than one sources are simulated. 
Meanwhile, the SourceGenerator module provides a framework for runing multiple 
Sources in a single simulation. The software also comes with
a Plotter module to help users analyze their results and a Controller class to call
the other modules.

Source
----------------------

The Simulator software comes with the following Source classes:

    .. autoclass:: Source.Standard

    .. autoclass:: Source.Transient
    
    .. autoclass:: Source.VaryingSpectrum
    
Source.Standard represents a generic Source object, while all other Source 
classes inherit from the standard Source object to define more specific kinds of
sources.

The standard Source object provides the followings parameters for defining a source:

* startTime -- start time of simulation
* endTime -- end time of simulation
* timeRes -- time resolution
* upperE -- upper energy limit
* lowerE -- lower energy limit
* energyRes -- energy resolution
* gaLong -- positional information (Galactic Longitude)
* gaLat -- positional information (Galactic Latitude)
* link -- the file location from which parameters can be written and read 
* useFile -- indicates whether spectrum should be read from a file
* skipPrompts -- indicates whether default analytical expressions should be used to define a source's spectrum and time-dependent flux.


The standard Source object can call the following methods:

    .. automethod:: Source.Standard.writeP

   
    .. automethod:: Source.Standard.readP

   
    .. automethod:: Source.Standard.store_flux_energy_list
   
   
    .. automethod:: Source.Standard.get_coord
   
   
    .. automethod:: Source.Standard.prompt_for_expressions

Source.Transient provides new emissionStart and emissionLength parameters to indentify
the start time of a transient's emission and its duration. Transient also
overrides the prompt_for_expressions method to suggest a set of 
functions that will simulate the flux and spectrum of a generic, constant spectrum,
novae.
   
    .. automethod:: Source.Transient.prompt_for_expressions

Source.VaryingSpectrum needs no new parameters but overrides the prompt_for_expressions 
method so that the user will not be prompted for spectrum parameters. (For this subclass,
Model.VaryingSpectrum is responsible for defining the spectrum.)

    .. automethod:: Source.VaryingSpectrum.prompt_for_expressions

Model
----------------------
  
The Simulator software comes with the following Model classes:

    .. autoclass:: Model.Standard

    .. autoclass:: Model.Transient
    
    .. autoclass:: Model.VaryingSpectrum
    
Model.Standard represents a generic Model that can generate the light curve of a 
standard Source, while all other Model classes inherit from the standard Model to 
define more specific kinds of Models. These models correspond with the Source
objects of similar name.

The standard Model object can call the following methods:
    
    .. automethod:: Model.Standard.log_this 
    
    .. automethod:: Model.Standard.generate_flux_values
    
    .. automethod:: Model.Standard.generate_spectral_shape

    .. automethod:: Model.Standard.generate_light_curve_from_flux_and_spectrum

    .. automethod:: Model.Standard.spectral_shape_from_file

    .. automethod:: Model.Standard.make_spec
   
    .. automethod:: Model.Standard.make_func

    .. automethod:: Model.Standard.warn_if_errors_present

    .. automethod:: Model.Standard.check_parens

    .. automethod:: Model.Standard.sample_spectrum_from_file
    
Model.Transient differs from the standard Model in how it generate the time-dependent 
flux of a source (it shuts off the emission before and after the transient's flare). 
To achieve this effect, Model.Transient overrides the generate_flux_values method of
the standard Model.

    .. automethod:: Model.Transient.generate_flux_values
    
Model.Transient differs from the standard Model because it generates the spectrum of
a source using time intervals and txt files specified in the spectral_shape_from_file method.
It also overrides several other methods that are used in Model.Standard to generate constant
spectral shape. (NOTE: User must edit the subclass's spectral_shape_from_file method if 
they would like to control the time intervals and txt files used in the simulations).
    
    .. automethod:: Model.VaryingSpectrum.generate_spectral_shape
    
    .. automethod:: Model.VaryingSpectrum.make_spec
    
    .. automethod:: Model.VaryingSpectrum.spectral_shape_from_file
    
    .. automethod:: Model.VaryingSpectrum.generate_light_curve_from_flux_and_spectrum

SourceMap
----------------------

The Simulator software comes with the following SourceMap class:

    .. autoclass:: SourceMap.SourceMap

The SourceMap class contains the following methods:

    .. automethod:: SourceMap.SourceMap.store_source
   
    .. automethod:: SourceMap.SourceMap.return_source_map
   
    .. automethod:: SourceMap.SourceMap.print_star_coords


SourceGenerator
----------------------

The Simulator software comes with the following SourceGenerator class:

    .. autoclass:: SourceGenerator.SourceGenerator

The SourceGenerator object can call the following methods:

    .. automethod:: SourceGenerator.SourceGenerator.generate_sources

    .. automethod:: SourceGenerator.SourceGenerator.one_source

    .. automethod:: SourceGenerator.SourceGenerator.find_emission_start

    .. automethod:: SourceGenerator.SourceGenerator.find_galactic_longitude

    .. automethod:: SourceGenerator.SourceGenerator.find_galactic_lattitude
        
    .. automethod:: SourceGenerator.SourceGenerator.print_locations


Plotter
----------------------

The Simulator software comes with the following Plotter class:

    .. autoclass:: Plotter.Plotter

The Plotter class contains the following methods:

    .. automethod:: Plotter.Plotter.fluxVtime
   
    .. automethod:: Plotter.Plotter.fluxVenergy
   
    .. automethod:: Plotter.Plotter.validation_report
   
    .. automethod:: Plotter.Plotter.more_detailed_validation_report
   

Controller
----------------------
The controller class lets users call the other modules.